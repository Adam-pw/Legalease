import { Button } from "@chakra-ui/react";
import React, { useEffect, useRef, useState } from "react";
import Image from "next/image";
import { useReactToPrint } from "react-to-print";

const FormGeneration = ({ data }: any) => {
  const ref = useRef(null);

  const handlePrint = useReactToPrint({
    content: () => ref.current,
  });

  const [timeNow, setTimeNow] = useState<any>();
  useEffect(() => {
    const date = Date().slice(0, -21);
    setTimeNow(date);
  }, []);

  const [apiData, setApiData] = useState<any>();

  const fetchQuestions = async () => {
    const body = {
      messages: [
        {
          role: "user",
          content: `Your name is legalEase, you are a legal expert on laws. The user seeks legal advice from you. The name of the user is ${data?.name}, the age is ${data?.age} and e-mail address is ${data?.email}. The user might have a criminal record that is ${data?.criminalHistory} so keep that in consideration. The user has provided you with a short description or summary is the situation, which is ${data?.summary}. The userâ€™s problem is ${data?.description}. It mentions how the problem started; it also mentions how it is affecting the life of the user. Understand the situation of the user in a humane way. The user might have taken some steps to remedy the problem, take those steps into consideration too. You have to create a report file for the situation the user is in, use the details provided above and make a detailed analysis of the case. You should return the response in JSON format only, no greeting message, example of required format is {"Articles & situation applicable" : ["Return articles that are most relevant to the case and the articles explanation"], "Recommended Actions" : ["return different actions that the user can take"], "Recommended Resources" : ["return different resources that the user can refer to."]}. You have to only stick to the format only. No additional things.`,
        },
      ],
    };
    try {
      const response = await fetch("/api/chatgpt", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(body),
      });
      const data = await response.json();
      setApiData(JSON.parse(data.data.choices[0].message.content));
      console.log(data);
      console.log(JSON.parse(data.data.choices[0].message.content));

      console.log(data, "Response data");
    } catch (error) {
      console.error("Error fetching questions:", error);
    }
  };

  useEffect(() => {
    if (data) {
      fetchQuestions();
    }
  }, [data]);

  return (
    <>
      <div className="">
        <h1 className="text-2xl font-bold flex flex-col md:flex-row items-center justify-center w-full gap-2 md:gap-0 leading-[1.1] tracking-wide mt-6">
          <span className="text-[#280036]">Case File Generation </span>
          <span className="text-[#ff0041]">{`with LegalEase`}</span>
        </h1>
        <div className="md:mx-auto mx-4 md:w-[70%] mb-10">
          <div className="border border-gray-400 md:p-4 mt-8 rounded-lg shadow-lg overflow-y-scroll">
            <div className="p-8" ref={ref}>
              <div className="text-2xl text-center font-bold underline flex justify-center md:justify-between">
                <Image
                  src="/logo.png"
                  alt=""
                  width={80}
                  height={100}
                  className="hidden md:block"
                />
                <div className="">Case File</div>
                <img
                  src="https://htm-4-images.s3.amazonaws.com/img/HTMLOGHO_%20NEW.png"
                  alt=""
                  width={80}
                  height={100}
                  className="hidden md:block"
                />
              </div>
              <hr className="mt-6 border-t border-gray-400"></hr>
              <div className="mt-2 text-sm text-center">
                The below File is generated by an AI Assistant by the company
                LegalEase, Always check and double verify it by a senior lawyer
                only for reference use.
              </div>
              <hr className="mt-6 border-t border-gray-400"></hr>
              <div className="flex flex-wrap justify-between">
                <div className="">
                  <div className="text-lg font-bold mt-2">
                    Name :{" "}
                    <span className="text-gray-600">{data && data?.name}</span>
                  </div>
                  <div className="text-lg font-bold mt-2">
                    Age :{" "}
                    <span className="text-gray-600">{data && data?.age}</span>
                  </div>
                  <div className="text-lg font-bold mt-2">
                    Email :{" "}
                    <span className="text-gray-600">{data && data?.email}</span>
                  </div>
                </div>
                <div className="">
                  <div className="text-lg font-bold mt-2">
                    Date : <span className="text-gray-600">{timeNow}</span>
                  </div>
                  <div className="text-lg font-bold mt-2">
                    Category : <span className="text-gray-600">Labour Law</span>
                  </div>
                </div>
              </div>
              <hr className="mt-6 border-t border-gray-400"></hr>
              <div className="text-lg font-bold mt-6">
                Articles & Sections Applicable :
              </div>
              {apiData &&
                apiData["Articles & situation applicable"].map(
                  (value: any, index: any) => {
                    return (
                      <li className="mt-6" key={index}>
                        {value}
                      </li>
                    );
                  }
                )}
              <hr className="mt-6 border-t border-gray-400"></hr>
              <div className="text-lg font-bold mt-6">
                Recommended Actions :
              </div>
              <div className="mt-6">
                {apiData &&
                  apiData["Recommended Actions"].map(
                    (value: any, index: any) => {
                      return (
                        <li className="mt-6" key={index}>
                          {value}
                        </li>
                      );
                    }
                  )}
              </div>
              <hr className="mt-6 border-t border-gray-400"></hr>
              <div className="text-lg font-bold mt-6">
                Recommended Resources :
              </div>
              <div className="mt-6">
                {apiData &&
                  apiData["Recommended Resources"].map(
                    (value: any, index: any) => {
                      return (
                        <li className="mt-6" key={index}>
                          {value}
                        </li>
                      );
                    }
                  )}
              </div>
            </div>
          </div>
          <Button
            colorScheme="blue"
            className="w-full mt-6"
            onClick={handlePrint}
          >
            Generate your file here
          </Button>
        </div>
      </div>
    </>
  );
};

export default FormGeneration;
